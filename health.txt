
==============================================================================
lazy:                                           require("lazy.health").check()

lazy.nvim ~
- {lazy.nvim} version `11.17.1`
- ✅ OK {git} `version 2.39.5 (Apple Git-154)`
- ⚠️ WARNING found existing packages at `/Users/a.i./.local/share/nvim/site/pack/packer`
- ✅ OK packer_compiled.lua not found

luarocks ~
- checking `hererocks` installation
- ✅ OK no plugins require `luarocks`, so you can ignore any warnings below
- ✅ OK {python3} `Python 3.13.2`
- ❌ ERROR {/Users/a.i./.local/share/nvim/lazy-rocks/hererocks/bin/luarocks} not installed
- ⚠️ WARNING {/Users/a.i./.local/share/nvim/lazy-rocks/hererocks/bin/lua} version `5.1` not installed
- ⚠️ WARNING Lazy won't be able to install plugins that require `luarocks`.
  Here's what you can do:
   - fix your `luarocks` installation
   - disable *hererocks* with `opts.rocks.hererocks = false`
   - disable `luarocks` support completely with `opts.rocks.enabled = false`

==============================================================================
lazyvim:                                     require("lazyvim.health").check()

LazyVim ~
- ✅ OK Using Neovim >= 0.9.0
- ✅ OK `git` is installed
- ✅ OK `rg` is installed
- ✅ OK `fd` is installed
- ⚠️ WARNING `lazygit` is not installed
- ⚠️ WARNING `fzf` is not installed
- ✅ OK `curl` is installed

==============================================================================
luasnip:                                     require("luasnip.health").check()

luasnip ~
- ⚠️ WARNING For Variable/Placeholder-transformations, luasnip requires
      the jsregexp library. See `:help |luasnip-lsp-snippets-transformations`| for advice
  

==============================================================================
nvim-treesitter:                     require("nvim-treesitter.health").check()

Installation ~
- ✅ OK `tree-sitter` found 0.25.4 (parser generator, only needed for :TSInstallFromGrammar)
- ✅ OK `node` found v23.11.0 (only needed for :TSInstallFromGrammar)
- ✅ OK `git` executable found.
- ✅ OK `cc` executable found. Selected from { vim.NIL, "cc", "gcc", "clang", "cl", "zig" }
  Version: Apple clang version 16.0.0 (clang-1600.0.26.6)
- ✅ OK Neovim was compiled with tree-sitter runtime ABI version 15 (required >=13). Parsers must be compatible with runtime ABI.

OS Info:
{
  machine = "arm64",
  release = "24.3.0",
  sysname = "Darwin",
  version = "Darwin Kernel Version 24.3.0: Thu Jan  2 20:23:36 PST 2025; root:xnu-11215.81.4~3/RELEASE_ARM64_T8112"
} ~

Parser/Features         H L F I J
  - bash                ✓ ✓ ✓ . ✓
  - c                   ✓ ✓ ✓ ✓ ✓
  - css                 ✓ . ✓ ✓ ✓
  - diff                ✓ . ✓ . ✓
  - elixir              ✓ ✓ ✓ ✓ ✓
  - gitignore           ✓ . . . ✓
  - heex                ✓ ✓ ✓ ✓ ✓
  - html                ✓ ✓ ✓ ✓ ✓
  - javascript          ✓ ✓ ✓ ✓ ✓
  - jsdoc               ✓ . . . .
  - json                ✓ ✓ ✓ ✓ .
  - json5               ✓ . . . ✓
  - jsonc               ✓ ✓ ✓ ✓ ✓
  - lua                 ✓ ✓ ✓ ✓ ✓
  - luadoc              ✓ . . . .
  - luap                ✓ . . . .
  - markdown            ✓ . ✓ ✓ ✓
  - markdown_inline     ✓ . . . ✓
  - ninja               ✓ . ✓ ✓ ✓
  - php                 ✓ ✓ ✓ ✓ ✓
  - printf              ✓ . . . .
  - python              ✓ ✓ ✓ ✓ ✓
  - query               ✓ ✓ ✓ ✓ ✓
  - regex               ✓ . . . .
  - ron                 ✓ ✓ ✓ ✓ ✓
  - rst                 ✓ ✓ . . ✓
  - rust                ✓ ✓ ✓ ✓ ✓
  - toml                ✓ ✓ ✓ ✓ ✓
  - tsx                 ✓ ✓ ✓ ✓ ✓
  - typescript          ✓ ✓ ✓ ✓ ✓
  - vim                 ✓ ✓ ✓ . ✓
  - vimdoc              ✓ . . . ✓
  - xml                 ✓ ✓ ✓ ✓ ✓
  - yaml                ✓ ✓ ✓ ✓ ✓

  Legend: H[ighlight], L[ocals], F[olds], I[ndents], In[j]ections
         +) multiple parsers found, only one will be used
         x) errors found in the query, try to run :TSUpdate {lang} ~

==============================================================================
snacks:                                       require("snacks.health").check()

Snacks ~
- ✅ OK setup called

Snacks.bigfile ~
- ✅ OK setup {enabled}

Snacks.dashboard ~
- ✅ OK setup {enabled}
- ❌ ERROR setup did not run

Snacks.explorer ~
- ✅ OK setup {enabled}

Snacks.image ~
- ⚠️ WARNING setup {disabled}
- ❌ ERROR None of the tools found: 'kitty', 'wezterm', 'ghostty'
- ❌ ERROR None of the tools found: 'magick', 'convert'
- ❌ ERROR `magick` is required to convert images. Only PNG files will be displayed.
- ✅ OK Terminal Dimensions:
  - {size}: `1918` x `1018` pixels
  - {scale}: `1.65`
  - {cell}: `13` x `26` pixels
- ✅ OK Available Treesitter languages:
    `css`, `html`, `javascript`, `markdown_inline`, `markdown`, `tsx`
- ⚠️ WARNING Missing Treesitter languages:
    `latex`, `norg`, `scss`, `svelte`, `typst`, `vue`
- ⚠️ WARNING Image rendering in docs with missing treesitter parsers won't work
- ❌ ERROR Tool not found: 'gs'
- ⚠️ WARNING `gs` is required to render PDF files
- ❌ ERROR None of the tools found: 'tectonic', 'pdflatex'
- ⚠️ WARNING `tectonic` or `pdflatex` is required to render LaTeX math expressions
- ❌ ERROR Tool not found: 'mmdc'
- ⚠️ WARNING `mmdc` is required to render Mermaid diagrams
- ❌ ERROR your terminal does not support the kitty graphics protocol
- supported terminals: `kitty`, `wezterm`, `ghostty`

Snacks.input ~
- ✅ OK setup {enabled}
- ❌ ERROR `vim.ui.input` is not set to `Snacks.input`

Snacks.lazygit ~
- ❌ ERROR {lazygit} not installed

Snacks.notifier ~
- ✅ OK setup {enabled}
- ❌ ERROR is not ready

Snacks.picker ~
- ✅ OK setup {enabled}
- ❌ ERROR `vim.ui.select` is not set to `Snacks.picker.select`
- ✅ OK Available Treesitter languages:
    `regex`
- ✅ OK 'git' `git version 2.39.5 (Apple Git-154)`
- ✅ OK 'rg' `ripgrep 14.1.1`
- ✅ OK `Snacks.picker.grep()` is available
- ✅ OK 'fd' `fd 10.2.0`
- ✅ OK `Snacks.picker.files()` is available
- ✅ OK `Snacks.picker.explorer()` is available
- ✅ OK `SQLite3` is available

Snacks.quickfile ~
- ✅ OK setup {enabled}

Snacks.scope ~
- ✅ OK setup {enabled}

Snacks.scroll ~
- ✅ OK setup {enabled}

Snacks.statuscolumn ~
- ⚠️ WARNING setup {disabled}
- ✅ OK is manually configured
  - `vim.o.statuscolumn = "%!v:lua.require'snacks.statuscolumn'.get()"`

Snacks.terminal ~
- ✅ OK shell configured
  - `vim.o.shell`: /bin/zsh
  - `parsed`: { "/bin/zsh" }

Snacks.toggle ~
- ✅ OK {which-key} is installed

Snacks.words ~
- ✅ OK setup {enabled}

==============================================================================
vim.deprecated:                       require("vim.deprecated.health").check()

- ✅ OK No deprecated functions detected

==============================================================================
vim.health:                               require("vim.health.health").check()

Configuration ~
- ✅ OK no issues found

Runtime ~
- ✅ OK $VIMRUNTIME: /opt/homebrew/Cellar/neovim/0.11.1/share/nvim/runtime

Performance ~
- ✅ OK Build type: Release

Remote Plugins ~
- ✅ OK Up to date

terminal ~
- key_backspace (kbs) terminfo entry: `key_backspace=^H`
- key_dc (kdch1) terminfo entry: `key_dc=\E[3~`
- $TERM_PROGRAM="WarpTerminal"
- $COLORTERM="truecolor"

External Tools ~
- ✅ OK ripgrep 14.1.1 (/opt/homebrew/bin/rg)

==============================================================================
vim.lsp:                                     require("vim.lsp.health").check()

- LSP log level : WARN
- Log path: /Users/a.i./.local/state/nvim/lsp.log
- Log size: 16748 KB

vim.lsp: Active Clients ~
- No active clients

vim.lsp: Enabled Configurations ~

vim.lsp: File Watcher ~
- file watching "(workspace/didChangeWatchedFiles)" disabled on all clients

vim.lsp: Position Encodings ~
- No active clients

==============================================================================
vim.provider:                           require("vim.provider.health").check()

Clipboard (optional) ~
- ✅ OK Clipboard tool found: pbcopy

Node.js provider (optional) ~
- Node.js: v23.11.0

- ⚠️ WARNING Missing "neovim" npm (or yarn, pnpm) package.
  - ADVICE:
    - Run in shell: npm install -g neovim
    - Run in shell (if you use yarn): yarn global add neovim
    - Run in shell (if you use pnpm): pnpm install -g neovim
    - You may disable this provider (and warning) by adding `let g:loaded_node_provider = 0` to your init.vim

Perl provider (optional) ~
- ⚠️ WARNING "Neovim::Ext" cpan module is not installed
  - ADVICE:
    - See :help |provider-perl| for more information.
    - You can disable this provider (and warning) by adding `let g:loaded_perl_provider = 0` to your init.vim
- ⚠️ WARNING No usable perl executable found

Python 3 provider (optional) ~
- pyenv: Path: /opt/homebrew/Cellar/pyenv/2.5.7/libexec/pyenv
- pyenv: $PYENV_ROOT is not set. Infer from `pyenv root`.
- pyenv: Root: /Users/a.i./.pyenv
- ⚠️ WARNING No Python executable found that can `import neovim`. Using the first available executable for diagnostics.
- ⚠️ WARNING Could not load Python :
  /opt/homebrew/bin/python3 does not have the "neovim" module.
  /opt/homebrew/bin/python3.13 does not have the "neovim" module.
  /opt/homebrew/bin/python3.12 does not have the "neovim" module.
  python3.11 not found in search path or not executable.
  python3.10 not found in search path or not executable.
  python3.9 not found in search path or not executable.
  python not found in search path or not executable.
  - ADVICE:
    - See :help |provider-python| for more information.
    - You can disable this provider (and warning) by adding `let g:loaded_python3_provider = 0` to your init.vim
- Executable: Not found

Python virtualenv ~
- ✅ OK no $VIRTUAL_ENV

Ruby provider (optional) ~
- Ruby: ruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]
- ⚠️ WARNING `neovim-ruby-host` not found.
  - ADVICE:
    - Run `gem install neovim` to ensure the neovim RubyGem is installed.
    - Run `gem environment` to ensure the gem bin directory is in $PATH.
    - If you are using rvm/rbenv/chruby, try "rehashing".
    - See :help |g:ruby_host_prog| for non-standard gem installations.
    - You can disable this provider (and warning) by adding `let g:loaded_ruby_provider = 0` to your init.vim

==============================================================================
vim.treesitter:                       require("vim.treesitter.health").check()

Treesitter features ~
- Treesitter ABI support: min 13, max 15
- WASM parser support: false

Treesitter parsers ~
- ✅ OK Parser: bash                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/bash.so
- ✅ OK Parser: c                    ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/c.so
- ✅ OK Parser: c                    ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/c.so
- ✅ OK Parser: css                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/css.so
- ✅ OK Parser: diff                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/diff.so
- ✅ OK Parser: elixir               ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/elixir.so
- ✅ OK Parser: gitignore            ABI: 13, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/gitignore.so
- ✅ OK Parser: heex                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/heex.so
- ✅ OK Parser: html                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/html.so
- ✅ OK Parser: javascript           ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/javascript.so
- ✅ OK Parser: jsdoc                ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/jsdoc.so
- ✅ OK Parser: json                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/json.so
- ✅ OK Parser: json5                ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/json5.so
- ✅ OK Parser: jsonc                ABI: 13, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/jsonc.so
- ✅ OK Parser: lua                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/lua.so
- ✅ OK Parser: lua                  ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/lua.so
- ✅ OK Parser: luadoc               ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/luadoc.so
- ✅ OK Parser: luap                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/luap.so
- ✅ OK Parser: markdown             ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/markdown.so
- ✅ OK Parser: markdown             ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/markdown.so
- ✅ OK Parser: markdown_inline      ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/markdown_inline.so
- ✅ OK Parser: markdown_inline      ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/markdown_inline.so
- ✅ OK Parser: ninja                ABI: 13, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/ninja.so
- ✅ OK Parser: php                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/php.so
- ✅ OK Parser: printf               ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/printf.so
- ✅ OK Parser: python               ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/python.so
- ✅ OK Parser: query                ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/query.so
- ✅ OK Parser: query                ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/query.so
- ✅ OK Parser: regex                ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/regex.so
- ✅ OK Parser: ron                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/ron.so
- ✅ OK Parser: rst                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/rst.so
- ✅ OK Parser: rust                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/rust.so
- ✅ OK Parser: toml                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/toml.so
- ✅ OK Parser: tsx                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/tsx.so
- ✅ OK Parser: typescript           ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/typescript.so
- ✅ OK Parser: vim                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/vim.so
- ✅ OK Parser: vim                  ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/vim.so
- ✅ OK Parser: vimdoc               ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/vimdoc.so
- ✅ OK Parser: vimdoc               ABI: 14, path: /opt/homebrew/Cellar/neovim/0.11.1/lib/nvim/parser/vimdoc.so
- ✅ OK Parser: xml                  ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/xml.so
- ✅ OK Parser: yaml                 ABI: 14, path: /Users/a.i./.local/share/nvim/lazy/nvim-treesitter/parser/yaml.so

